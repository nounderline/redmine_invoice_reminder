<%-
  macro_list = %w(%{invoice.number} %{invoice.url} %{invoice.issue_date} %{invoice.due_date} %{invoice.total} %{project.name})
  recipients_options = []

  recipients_options << [l(:field_invoice_contact), '_contact']

  recipients_options << ['', '', { :disabled => true }]
  recipients_options << [l(:label_role_plural), '', { :disabled => true }]
  recipients_options += Role.select([:id, :name]).map { |r| [ r[:name], ("r_%d" % r[:id]) ] }

  recipients_options << ['', '', { :disabled => true }]
  recipients_options << [l(:label_user_plural), '', { :disabled => true }]
  recipients_options += User.where(status: true).order(:lastname).collect { |c|
    [
      ('%s %s (%s)' % [ c[:lastname], c[:firstname], c[:login] ]),
      ("u_%d" % c[:id])
    ]
  }
-%>

<style>
#settings input[type="text"], #settings textarea {
  width: 70%;
}
</style>

<p>
  <label><%= l(:label_invoice_reminder_email_subject) %></label>
  <%= text_field_tag 'settings[invoice_reminder_email_subject]', (@settings[:invoice_reminder_email_subject].blank? ? l(:default_invoice_reminder_email_subject) : @settings[:invoice_reminder_email_subject]) %>
</p>
<p>
  <label><%= l(:label_invoice_reminder_email_body) %></label>
  <%= text_area_tag 'settings[invoice_reminder_email_body]', @settings[:invoice_reminder_email_body].blank? ? l(:default_invoice_reminder_email_body) : @settings[:invoice_reminder_email_body], rows: 8 %>
  <em class="info mail-macros"><%= l(:text_email_macros, :macro => macro_list.map{ |m| link_to m, "#", :class => "mail-macro" }.join(', ')).html_safe %></em>
</p>
<p>
  <label><%= l(:label_invoice_reminder_email_from) %></label>
  <%= text_field_tag 'settings[invoice_reminder_email_from]', @settings[:invoice_reminder_email_from] %>
</p>
<p>
  <label><%= l(:label_invoice_reminder_email_pdf_attachment) %></label>
  <%= check_box_tag 'settings[invoice_reminder_email_pdf_attachment]', 1, @settings[:invoice_reminder_email_pdf_attachment].to_i > 0 %>
</p>
<p>
  <label><%= l(:label_invoice_reminder_email_recipients) %></label>
  <%= select_tag 'settings[invoice_reminder_email_recipients]', options_for_select(recipients_options, @settings[:invoice_reminder_email_recipients]), multiple: true, size: 12 %>
</p>


<script>
  $.fn.insertAtCaret = function(myValue) {
    return this.each(function() {
      var me = this;
      if (document.selection) { // IE
        me.focus();
        sel = document.selection.createRange();
        sel.text = myValue;
        me.focus();
      } else if (me.selectionStart || me.selectionStart == '0') { // Real browsers
        var startPos = me.selectionStart, endPos = me.selectionEnd, scrollTop = me.scrollTop;
        me.value = me.value.substring(0, startPos) + myValue + me.value.substring(endPos, me.value.length);
        me.focus();
        me.selectionStart = startPos + myValue.length;
        me.selectionEnd = startPos + myValue.length;
        me.scrollTop = scrollTop;
      } else {
        me.value += myValue;
        me.focus();
      }
    });
  };

  $(function() {
    var $lastInput = null,
        $subjectInput = $('#settings_invoice_reminder_email_subject')[0],
        $bodyInput = $('#settings_invoice_reminder_email_body')[0];

    $('input, textarea').on('focus', function() {
      $lastInput = this;
    });


    $('.mail-macros a.mail-macro').bind('click', function() {
      var $target = null;
      if ($lastInput == $subjectInput || $lastInput == $bodyInput) {
        $target = $lastInput;
      } else {
        $target = $bodyInput;
      }

      $($target).insertAtCaret($(this).html());
      
      return false;
    });
  });
</script>